name: Docker Workflow

on:
  workflow_dispatch:
  push:
    branches: [dev ]

jobs:
  test-with-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and run tests in Docker
        run: |
          docker build -f docker/go.test.Dockerfile -t go-api:test .
          docker run --rm go-api:test

      - name: Build production Docker image
        run: |
          docker build -f docker/go.Dockerfile -t go-api:latest .

  build-and-deploy-docker:
    needs: test-with-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build production Docker image
        run: |
          docker build -f docker/go.Dockerfile -t go-api:latest .

      - name: Test Docker container
        run: |
          # Start the container in background
          docker run -d --name test-container -p 8080:8080 go-api:latest
          
          # Wait for the container to start
          sleep 5
          
          # Test the application endpoint
          curl -f http://localhost:8080 || exit 1
          
          # Stop and remove the container
          docker stop test-container
          docker rm test-container

      - name: Clean up Docker images
        run: |
          docker rmi go-api:latest go-api:test || true

  docker-compose-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Test with Docker Compose (Production)
        run: |
          # Build and start the production service
          docker-compose up -d app
          
          # Wait for the service to start
          sleep 10
          
          # Test the application
          curl -f http://localhost:8080 || exit 1
          
          # Stop and clean up
          docker-compose down
          docker-compose rm -f

      - name: Test with Docker Compose (Development)
        run: |
          # Build and start the development service
          docker-compose up -d dev
          
          # Wait for the service to start and air to reload
          sleep 15
          
          # Test the application
          curl -f http://localhost:8080 || exit 1
          
          # Stop and clean up
          docker-compose down
          docker-compose rm -f

      - name: Clean up Docker resources
        run: |
          docker system prune -f
